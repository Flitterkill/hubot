#!/usr/bin/env coffee
# vim:ft=coffee ts=2 sw=2 et :
# -*- mode:coffee -*-

Hubot    = require '../node_modules/hubot'

Fs       = require 'fs'
Path     = require 'path'

Options =
  enableHttpd: true
  scripts:     []
  path:        "."

process.env["HUBOT_AUTH_ADMIN"] = 'Shell'

adapterPath = Path.join __dirname, "..", "node_modules", "hubot", "src", "adapters"

robot = Hubot.loadBot adapterPath, 'shell', Options.enableHttpd, 'Hubot'
robot.alias = '/'

loadScripts = ->

  scriptsPath = Path.resolve ".", "scripts"
  robot.load scriptsPath

  scriptsPath = Path.resolve ".", "src", "scripts"
  robot.load scriptsPath

  hubotScripts = Path.resolve ".", "hubot-scripts-dev.json"
  Fs.exists hubotScripts, (exists) ->
    if exists
      Fs.readFile hubotScripts, (err, data) ->
        if data.length > 0
          try
            scripts = JSON.parse data
            scriptsPath = Path.resolve "node_modules", "hubot-scripts", "src", "scripts"
            robot.loadHubotScripts scriptsPath, scripts
          catch err
            console.error "Error parsing JSON data from hubot-scripts-dev.json: #{err}"
            process.exit(1)

  externalScripts = Path.resolve ".", "external-scripts-dev.json"
  Fs.exists externalScripts, (exists) ->
    if exists
      Fs.readFile externalScripts, (err, data) ->
        if data.length > 0
          try
            scripts = JSON.parse data
          catch err
            console.error "Error parsing JSON data from external-scripts-dev.json: #{err}"
            process.exit(1)
          robot.loadExternalScripts scripts

  for path in Options.scripts
    if path[0] == '/'
      scriptsPath = path
    else
      scriptsPath = Path.resolve ".", path
    robot.load scriptsPath

robot.adapter.on 'connected', loadScripts

robot.run()
